buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
    }
}

plugins {
    id 'maven-publish'
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

allprojects {
    repositories {
        google()
        jcenter()
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.0'

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }

    lintOptions {
        abortOnError false
    }

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFile != null && outputFileName.endsWith('.aar')) {
                outputFileName = "atsl.aar"
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    implementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.test:rules:1.1.1'
    implementation 'androidx.test.ext:junit:1.1.1'
    implementation 'androidx.test:runner:1.2.0'
    implementation 'androidx.test:monitor:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

}

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
}

def nexusUrl = System.getProperty('NEXUS_PROTOCOL', 'http') + '://' +
        System.getProperty('NEXUS_HOST', '') +
        System.getProperty('NEXUS_PATH', '/nexus/content/repositories/ebu-releases/')

publishing {
    repositories {
        maven {
            url nexusUrl
            credentials {
                username System.getProperty('NEXUS_USER', '')
                password System.getProperty('NEXUS_PASSWORD', '')
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId     System.getProperty('GROUP_ID', 'com.blackberry.blackberrydynamics')
            artifactId  System.getProperty('ARTIFACT_ID', 'atsl')
            version     System.getProperty('VERSION_ID', 'unknown')
            artifact ("$buildDir/outputs/aar/atsl.aar") {
                builtBy assembleRelease
            }

        }
    }
}
